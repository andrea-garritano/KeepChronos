<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence 
http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

	<persistence-unit name="mysql-pu" transaction-type="RESOURCE_LOCAL">
		<!-- The persistence-unit name must to be UNIQUE -->
		<!-- The value RESOURCE_LOCAL to replace the default value (JTA) allows 
			you to manage connection with database manually -->

		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		<!-- The provider specifies the JPA implementation that you want to use 
			(Hibernate) -->

		<class>com.garritano.keepchronos.model.Project</class>
		<class>com.garritano.keepchronos.model.Task</class>
		<!-- Specify names of managed persistable classes -->

		<properties>
			<property name="hibernate.dialect"
				value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			<!-- The dialect specifies the language of your DB (MySQL 5 InnoDB) -->

			<property name="hibernate.hbm2ddl.auto" value="create" />
				<!-- Possible values for hbm2ddl: 
					validate: validate the schema, makes no changes to the database.
					update: update the schema.
					create: creates the schema, destroying previous data.
					create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped. 
				-->

			<property name="hibernate.connection.url"
				value="jdbc:mysql://localhost:3306/timekeep?createDatabaseIfNotExist=true" />
			<!-- the address with port of your mySql service, followed by the name 
				of DB that is created if not exist -->

			<property name="hibernate.connection.username" value="root" />
			<property name="hibernate.connection.password" value="" />
			<!-- username and password of your mySql connection -->

			<property name="hibernate.show_sql" value="true" />
			<!-- show_sql=true permits to view queries in console -->

			<property name="hibernate.format_sql" value="true" />
			<!-- format_sql=true permits to view formatted queries in console -->

		</properties>

	</persistence-unit>
	
	<persistence-unit name="nosql-pu" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		
        <class>com.garritano.keepchronos.model.ProjectNoSQL</class>
        <properties>
              <property name="hibernate.search.Rules.directory_provider" value="ram"/>
              <property name="hibernate.ogm.datastore.provider"
                        value="org.hibernate.ogm.datastore.mongodb.impl.MongoDBDatastoreProvider"/>
              <property name="hibernate.ogm.mongodb.database" value="timekeep"/>
              <property name="hibernate.ogm.mongodb.host" value="localhost"/>
              <property name="hibernate.ogm.mongodb.port" value="27017"/>
              <property name="hibernate.ogm.datastore.database" value="timekeep"/>
              <property name="hibernate.ogm.mongodb.username" value="root"/>
              <property name="hibernate.ogm.mongodb.password" value="root"/>
              
        </properties>
    </persistence-unit>
    
    <persistence-unit name="infinispan-pu" transaction-type="RESOURCE_LOCAL">
        <!-- Use the Hibernate OGM provider: configuration will be transparent -->
        <provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
        
        <class>com.garritano.keepchronos.model.TaskNoSQL</class>
        <class>com.garritano.keepchronos.model.ProjectNoSQL</class>
        <properties>
            <!-- Here you will pick which NoSQL technology to use, and configure it;
                 in this example we start a local in-memory Infinispan node. -->
            <property name="hibernate.ogm.datastore.provider" value="infinispan_embedded"/>
            <property name="hibernate.cache.infinispan.com.garritano.keepchronos.model.ProjectNoSQL.cfg" value="project-entity"/>
        </properties>
    </persistence-unit>

</persistence>
